<%- include('./partials/head.ejs' ) %>

<link rel="stylesheet" href="/css/settings.min.css?version=<%= version %>" />

<div class="groups settings-box" x-data="Groups">    
    <div class="header">
        <span class="title">Groups</span>
        <div class="buttons">
            <a class="btn add" href="/group/<%= Utils.newGuid() %>">Add</a>
        </div>
    </div>
    <ul class="group-list contains-toggle">
        <li class="list-header">
            <span class="name">Name</span>
            <span class="no-items">Items</span>
            <span class="enabled">Enabled</span>
            <span class="controls"></span>
        </li>
        <% for(let item of settings.Groups) { 
            if(!item)
                continue;
            let itemCount = item.Items?.length || 0;
            let items = itemCount == 1 ? "1 Item" : itemCount + " Items";    
        %>
        <li id="<%= item.Uid%>" draggable="true" @dragstart="dragStart" @dragenter="dragEnter" @dragover.prevent="dragOver" @dragleave="dragLeave" @drop.prevent="dragDrop" @dragend="dragEnd"> 
            <span class="icon-sort"></span>
            <span class="name"><%= item.Name %></span>
            <span class="no-items"><%= items %></span>
            <span class="enabled">                
                <label for="<%= item.Uid %>Enabled" class="toggle-switchy">
                    <input type="checkbox" id="<%= item.Uid %>Enabled" <%= item.Enabled !== false ? "checked" : "" %> @change="setStatus('<%= item.Uid %>', event.target.checked)" />
                    <span class="toggle">
                        <span class="switch"></span>
                    </span>
                </label>
            </span>
            <span class="controls">
                <a title="Edit" class="icon-edit" href="/group/<%= item.Uid %>"></a>
                <span title="Delete" class="icon-trash" @click="deleteGroup('<%= item.Uid %>')"></span>
            </span>
        </li>
        <% } %>
    </ul>
</div>

<script src="/js/settings.js?version=<%= version %>"></script>


<script>

    document.addEventListener('alpine:init', () => {
        Alpine.data('Groups', () => ({
            deleteGroup(uid) {
                let name = document.getElementById(uid).querySelector('.name').innerText;
                confirmPrompt(`Are you sure you want to delete the group "${name}"?`).then(() => 
                {
                    fetch('/group/' + encodeURIComponent(uid), { method: 'DELETE'}).then(()=>{
                        document.getElementById(uid).remove(); 
                    });
                }).catch(err => {});
            },
            setStatus(uid, enabled){

                fetch('/group/' + encodeURIComponent(uid) + '/status/' + (enabled === true), { method: 'POST'});
            },
            
            dragSrcEl:null,
            dragStart(e){                    
                e.target.style.opacity = '0.4';
                this.dragSrcEl = e.target;
                e.dataTransfer.effectAllowed = 'move';
            },
            dragEnter(e){
                e.target.classList.add('over');
            },
            dragLeave(e){
                e.target.classList.remove('over');
            },
            dragOver(e){
                e.dataTransfer.dropEffect = 'move';
            },
            dragEnd(e){
                e.target.style.opacity = '1';
                document.querySelectorAll('.group-list li').forEach(function (item) {
                    item.classList.remove('over');
                });
            },
            dragDrop(e){
                if (this.dragSrcEl != e.target) {
                    // this is the target, where we are adding it
                    // dragSrcEl is the item being dragged
                    try{         
                        e.target.parentNode.insertBefore(this.dragSrcEl, e.target);
                        this.saveLayout();
                    }catch(err){}
                }
                return false;
            },            
            saveLayout() {
                let uids = Array.from(document.querySelectorAll('.group-list li')).map(x => x.getAttribute('id'));

                const options = {
                    method: 'POST',
                    body: JSON.stringify({ uids: uids}),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                }

                return fetch('/groups/order', options);
            }
        }))
    });
</script>

<%- include('./partials/footer.ejs') %>