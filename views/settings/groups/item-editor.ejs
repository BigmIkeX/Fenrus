<% 
    if(typeof(dashboards) === 'undefined' || !dashboards)
        dashboards = [];
%> 

<div x-data="ItemEditor">
    <template x-if="Opened">
        <div>
            <div class="side-edior-background"></div>
            <div class="settings-box side-editor">
                <div class="header">
                    <span class="title" x-text="EditorTitle"></span>
                    <div class="buttons">
                        <button :disabled="isDisabled()" class="btn" @click="save">Save</button>
                        <button :disabled="isDisabled()" class="btn" @click="close">Cancel</button>
                    </div>
                </div>
                <div class="content">
                    <div class="setting">
                        <span class="label">Type</span>
                        <span class="value">
                            <select :disabled="isDisabled()" x-model="model._Type" @change="typeChanged"  @keydown.enter="saveEditor">
                                <option value="DashboardApp">App</option>
                                <option value="DashboardLink">Link</option>
                                <option value="Dashboard">Dashboard</option>
                            </select>
                        </span>
                    </div> 
                    <template x-if="model._Type == 'DashboardApp'">
                        <div class="setting">
                            <span class="label">App</span>
                            <span class="value">
                                <select :disabled="isDisabled()" x-model="model.AppName" @change="appChanged" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="saveEditor">
                                    <option value="" disabled>Select An App</option>                            
                                    <optgroup label="Smart">
                                        <% for(let app of apps.filter(x => x.Interval)) { %>
                                            <option><%= app.Name %></option>
                                        <% } %>
                                    </optgroup>
                                    <optgroup label="Basic">
                                        <% for(let app of apps.filter(x => !x.Interval)) { %>
                                            <option><%= app.Name %></option>
                                        <% } %>
                                    </optgroup>
                                </select>
                            </span>
                        </div>
                    </template>
                    <template x-if="model._Type === 'Dashboard'">
                        <div class="setting">
                            <span class="label">Dashboard</span>
                            <span class="value">                                
                                <select :disabled="isDisabled()" x-model="model.Url" @keydown.enter="saveEditor" data-rules='["required"]'>
                                    <% for(let dashboard of dashboards) { %>
                                        <option value="<%= dashboard.Uid %>"><%= dashboard.Name %></option>
                                    <% } %>
                                </select>
                            </span>
                        </div>
                    </template>
                    <template x-if="model._Type != 'Dashboard'">
                        <div class="setting">
                            <span class="label">Name</span>
                            <span class="value">
                                <input :disabled="isDisabled()" type="text" x-model="model.Name" data-rules='["required"]' @blur="blur" @input="input" @keydown.enter="saveEditor">
                            </span>
                        </div>
                    </template>
                    <template x-if="model._Type != 'Dashboard'">
                        <div class="setting">
                            <span class="label">URL</span>
                            <span class="value">
                                <input :disabled="isDisabled()" type="text" x-model="model.Url" data-rules='["required", "regexMatch:^((http(s)?)|(HTTP(S)?))://."]' @blur="blur" @input="input"  @keydown.enter="saveEditor" />
                            </span>
                        </div> 
                    </template>
                    <div class="setting">
                        <span class="label">Size</span>
                        <span class="value">
                            <select @change="itemChange" :disabled="isDisabled()" x-model="model.Size" @keydown.enter="saveEditor">
                                <option value="small">Small</option>
                                <option value="medium">Medium</option>
                                <option value="large">Large</option>
                                <option value="x-large">X-Large</option>
                                <option value="xx-large">XX-Large</option>
                            </select>
                        </span>
                    </div> 
                    <div class="setting">
                        <span class="label">Icon</span>
                        <span class="value">
                            <div class="item-icon-picker">
                                <!-- Show the image -->
                                <template x-if="model.Icon">
                                    <a :class="{'db-item':true, 'db-link': model._Type === 'DashboardLink', 'db-basic': !EditorApp.Carousel, 'db-app': model._Type === 'DashboardApp',
                                    'small': model.Size === 'small', 'medium': model.Size === 'medium', 'large': model.Size === 'large', 
                                    'x-large': model.Size === 'x-large', 'xx-large': model.Size === 'xx-large', 'carousel': EditorApp.Carousel && model.Size.indexOf('large') >= 0}" >
                                        <div class="inner">
                                            <div class="icon">
                                                <img :src="model.Icon" class="icon-pick">
                                            </div>
                                            <div class="content">
                                                <div class="title" x-text="model.Name"></div>
                                                <template x-if="!EditorApp.Carousel || model.Size.indexOf('large') < 0">
                                                    <div class="status">
                                                        <ul class="livestats">
                                                            <li><span class="title">Sample</span><span class="value">1234</span></li>
                                                            <li><span class="title">Other</span><span class="value">5657</span></li>
                                                        </ul>
                                                    </div>
                                                </template>
                                                <template x-if="EditorApp.Carousel && model.Size.indexOf('large') >= 0">
                                                    <div class="status">
                                                        <div class="carousel">
                                                            <div class="item visible">
                                                                <div class="fill" style="background:#333">
                                                                    <div class="name tr">Sample item</div>
                                                                    <div class="br">2010</div>
                                                                    <a class="app-icon"><img :src="model.Icon"></a>
                                                                </div>
                                                            </div>
                                                            <div class="controls">
                                                                <a></a><a></a><a></a><a></a><a></a><a></a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </template>
                                            </div>
                                            <div class="arrow"></div>
                                        </div>
                                    </a>
                                    
                                </template>

                                <!-- Show the gray box when image is not available -->
                                <template x-if="!model.Icon">
                                    <div class="no-image"></div>
                                </template>

                                <!-- Image file selector -->
                                <button class="btn" id="file-chooser-btn" onclick="document.getElementById('file-chooser').click()">
                                    Browse...
                                </button>
                                <input style="display:none" id="file-chooser" class="file-chooser" type="file" accept="image/*" @change="imageChosen">

                            </div>
                        </span>
                    </div>

                    <template x-if="EditorApp.Properties?.length > 0">
                        <div class="header">
                            <span class="title">Properties</span>
                        </div>
                    </template>

                    <template x-if="EditorApp?.Interval || EditorApp?.Interval === -1">                
                        <div class="setting">
                            <span class="label">API URL</span>
                            <span class="value">
                                <input :disabled="isDisabled()" type="text" x-model="model.ApiUrl" data-rules='["regexMatch:^($|((http(s)?)|(HTTP(S)?))://.)"]' @blur="blur" @input="input"  @keydown.enter="saveEditor" :placeholder="model.Url" />
                                <span class="help-text">Optional URL to use to contact the API if different that the URL above.<br/>The main URL will be where the user is taken when the item is clicked.</span>
                            </span>
                        </div> 
                    </template>

                    <template x-for="prop in EditorApp.Properties">     
                        <template x-if="prop.Name && ifValue(prop.IfValue)">
                            <div class="setting">
                                <span class="label" x-text="prop.Name"></span>
                                <span class="value">
                                    <template x-if="prop.Type.toLowerCase() === 'string'">
                                        <input @change="itemChange" :disabled="isDisabled()" type="text" x-model="model.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                                    </template>
                                    <template x-if="prop.Type.toLowerCase() === 'password'">
                                        <input @change="itemChange" type="password" x-model="model.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                                    </template>
                                    <template x-if="prop.Type.toLowerCase() === 'int'">
                                        <input @change="itemChange" :disabled="isDisabled()" type="number" x-model.number="model.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                                    </template>
                                    <template x-if="prop.Type.toLowerCase() === 'select'">
                                        <select @change="itemChange" :disabled="isDisabled()" x-model="model.Properties[prop.Id]" x-init="selectFirstIfNull(prop)">
                                            <template x-for="opt in prop.Options">
                                                <option :value="opt.Value" x-text="opt.Label" :selected="opt.Value === model.Properties[prop.Id]"></option>
                                            </template>
                                        </select>
                                    </template>
                                    <template x-if="prop.Type.toLowerCase() === 'bool'">
                                        <label x:for="$id('toggle')" class="toggle-switchy">
                                            <input @change="itemChange" :disabled="isDisabled()" type="checkbox" :id="$id('toggle')" x-model="model.Properties[prop.Id]"  @keydown.enter="saveEditor" />
                                            <span class="toggle">
                                                <span class="switch"></span>
                                            </span>
                                        </label>
                                    </template>
                                </span>
                            </div> 
                        </template>
                    </template>

                    <template x-if="EditorApp.TestFunction">
                        <div class="setting tester">
                            <span class="label"></span>
                            <span class="value">                    
                                <button :disabled="isDisabled()" class="btn" @click="testApp" x-text="testing ? 'Testing' : 'Test'"></button>
                            </span>
                        </div>
                    </template>
                </div>
            </div>
        </div>
    </template>
</div>